// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Dontunee/banking/service (interfaces: ICustomerService)

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	dto "github.com/Dontunee/banking/dto"
	errs "github.com/Dontunee/banking/errs"
	gomock "github.com/golang/mock/gomock"
)

// MockICustomerService is a mock of ICustomerService interface.
type MockICustomerService struct {
	ctrl     *gomock.Controller
	recorder *MockICustomerServiceMockRecorder
}

// MockICustomerServiceMockRecorder is the mock recorder for MockICustomerService.
type MockICustomerServiceMockRecorder struct {
	mock *MockICustomerService
}

// NewMockICustomerService creates a new mock instance.
func NewMockICustomerService(ctrl *gomock.Controller) *MockICustomerService {
	mock := &MockICustomerService{ctrl: ctrl}
	mock.recorder = &MockICustomerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICustomerService) EXPECT() *MockICustomerServiceMockRecorder {
	return m.recorder
}

// GetAllCustomer mocks base method.
func (m *MockICustomerService) GetAllCustomer() ([]dto.CustomerResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllCustomer")
	ret0, _ := ret[0].([]dto.CustomerResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetAllCustomer indicates an expected call of GetAllCustomer.
func (mr *MockICustomerServiceMockRecorder) GetAllCustomer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllCustomer", reflect.TypeOf((*MockICustomerService)(nil).GetAllCustomer))
}

// GetCustomerById mocks base method.
func (m *MockICustomerService) GetCustomerById(arg0 string) (*dto.CustomerResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomerById", arg0)
	ret0, _ := ret[0].(*dto.CustomerResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetCustomerById indicates an expected call of GetCustomerById.
func (mr *MockICustomerServiceMockRecorder) GetCustomerById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomerById", reflect.TypeOf((*MockICustomerService)(nil).GetCustomerById), arg0)
}

// GetCustomersByStatus mocks base method.
func (m *MockICustomerService) GetCustomersByStatus(arg0 bool) ([]dto.CustomerResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomersByStatus", arg0)
	ret0, _ := ret[0].([]dto.CustomerResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetCustomersByStatus indicates an expected call of GetCustomersByStatus.
func (mr *MockICustomerServiceMockRecorder) GetCustomersByStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomersByStatus", reflect.TypeOf((*MockICustomerService)(nil).GetCustomersByStatus), arg0)
}
